# My Print Start and End macros. I recommend using KAMP.
# Every print, it adds a count to variables and runs a BED_MESH_CALIBRATE every 10 prints.
# Cribbed from here: https://www.reddit.com/r/klippers/comments/qdr0g9/my_gcode_macro_to_mesh_level_the_bed_every_10th/

[gcode_macro START_PRINT]
gcode:
    {% set BED_TEMP = params.BED_TEMP|default(60)|float %}
    {% set EXTRUDER_TEMP = params.TOOL_TEMP|default(220)|float %}
    PASS_MESSAGE VALUE='Ext:{EXTRUDER_TEMP} - Bed:{BED_TEMP}'
    # Use absolute coordinates
    G90
    G28 X Y
    M104 S165
    PASS_MESSAGE VALUE='Heating Bed...'
    M190 S{BED_TEMP} # set bed temp
    {% if printer.extruder.temperature < 165 %}
    M109 S165
    PASS_MESSAGE VALUE='Heating Extruder...'
    {% endif %}
    # Home the printer
    PASS_MESSAGE VALUE='Homing...'
    G28
    # Checking bed age
#    LEVEL_BED_ADVANCED MAX_AGE=10 ; probe mesh eventually # A great tool, if not using KAMP
#    G1 X10.1 Y0 F5000
#    G1 Y20 Z0.1 F5000
    BED_MESH_CALIBRATE # KAMP
    SMART_PARK # KAMP
    PASS_MESSAGE VALUE='Heating Extruder...'
    M109 S{EXTRUDER_TEMP} # set extruder and wait
    M190 S{BED_TEMP} #wait for bed temp
    #IDLE_CHECK
#    PURGE_LINE # if not using KAMP
    LINE_PURGE # KAMP
    START_PRINT_END
    
[gcode_macro PURGE_LINE] # Not needed if using KAMP
gcode:
    # Test Line
    PASS_MESSAGE VALUE='Printing Purge Line'
    G92 E0 ;Reset Extruder
    G1 Z2.0 F3000 ;Move Z Axis up
    G1 X10.1 Y20 Z0.28 F5000.0 ;Move to start position
    G1 X10.1 Y200.0 Z0.28 F1500.0 E15 ;Draw the first line
    G1 X10.4 Y200.0 Z0.28 F5000.0 ;Move to side a little
    G1 X10.4 Y20 Z0.28 F1500.0 E30 ;Draw the second line
    G1 X15 Y20 Z0.28 F5000.0 ; Move over to prevent blob squish
    G92 E0 ;Reset Extruder
    G1 Z2.0 F3000 ;Move Z Axis up
    G92 E0
    G92 E0
    G1 F3600 E-0.75

[gcode_macro START_PRINT_END]
gcode:
    PASS_MESSAGE VALUE='Here we go!'
    
[gcode_macro END_PRINT]
gcode:
    G91 ; Relative positioning
    G92 E0
#   G1 E-0.75 F2100
    #G1 E-1 F2100
    G1 X-2 Y-2 E-1 F2100
    G1 F3000 Z3 ; Move up
    G90 ; Absolute pos.
    G28 X Y; present print
    # Turn off bed, extruder, and fan
    M140 S0
    M104 S0
    M106 S0
    IDLE_CHECK
    SAVE_IF_SET     ; SAVE_CONFIG if a mesh was probed in START_PRINT
    M84 ; Disable steppers
    PASS_MESSAGE VALUE='Print Complete!'
    

; This is where the magic happens:
; MAX_AGE is checked against the stored variable
; SAVE=1 can be used to force saving the mesh (restarts klipper, so
;        only for manual usage)
; FORCE_LEVEL=1 forces a mesh probe even if MAX_AGE is not reached
[gcode_macro LEVEL_BED_ADVANCED]
description: Levels the bed if the last leveling was MAX_AGE runs ago. Force leveling by setting FORCE
variable_save_at_end: 0
gcode:
  {% set max_age = params.MAX_AGE|default(10)|int %}
  {% set force_level = params.FORCE|default(0)|int %}
  {% set save = params.SAVE|default(0)|int %}

  ; load level_age from stored variables
  {% set svv = printer.save_variables.variables %}
  {% if "level_age" not in svv %} ; first run
    SAVE_VARIABLE VARIABLE=level_age VALUE={max_age}
    {% set level_age = 1 %}
  {% else %} ; load level_age and increment
    {% set level_age = svv.level_age %}
    SAVE_VARIABLE VARIABLE=level_age VALUE={level_age|int + 1}
  {% endif %}
  {action_respond_info("Bed mesh age is " + level_age|string) + "."} 

  ; Level eventually
  {% if force_level or (level_age >= max_age|int) %}
    {action_respond_info("Bed mesh exceeded max age. Leveling...")} 

    ; homing if not homed yet
    {% if 'xy' not in printer.toolhead.homed_axes %}
    G28
    {% endif %}
  
    BED_MESH_CALIBRATE
    {% if save %}
      SAVE_VARIABLE VARIABLE=level_age VALUE=1 ; reset counter
      SAVE_CONFIG
    {% else %}
      SET_GCODE_VARIABLE MACRO=LEVEL_BED_ADVANCED VARIABLE=save_at_end VALUE=1
    {% endif %}
  {% else %}
    {action_respond_info("Loading old bed mesh.")} 
    BED_MESH_PROFILE LOAD=default
  {% endif %} 

# runs SAVE_CONFIG if the g-code variable was set in start gcode
[gcode_macro SAVE_IF_SET]
gcode:
  {% if printer["gcode_macro LEVEL_BED_ADVANCED"].save_at_end == 1 %}
  PASS_MESSAGE VALUE='Saving was requested - saving and restarting now.'
  SAVE_VARIABLE VARIABLE=level_age VALUE=1
  SAVE_CONFIG
  {% endif %}